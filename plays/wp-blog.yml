---

- name: Provision WP instance(s) in DigitalOcean
  hosts: wp-blog
  connection: local
  gather_facts: False
  tasks:
    - name: Set SSH
      digital_ocean:
        state: present
        command: ssh
        name: default
        ssh_pub_key: "{{ lookup('file', '~/.ssh/id_rsa.pub')}}"
        api_token: "{{ DO_API_TOKEN }}"
      register: public_ssh_key

    # Create a droplet and a corresponding domain record
    - name: Create droplet
      digital_ocean:
        state: present
        name: "{{ inventory_hostname }}"
        size_id: s-1vcpu-1gb
        region_id: fra1
        image_id: ubuntu-18-04-x64
        ssh_key_ids: "{{ public_ssh_key.ssh_key.id }}"
        api_token: "{{ DO_API_TOKEN }}"
        backups_enabled: no
        user_data: null
        ipv6: yes
        unique_name: yes
        wait: yes
        wait_timeout: 600
      register: new_droplet

    - name: Add new host to inventory
      add_host:
        name: "{{ new_droplet.droplet.ip_address }}"
        group: droplets
        ansible_ssh_user: root
        ansible_ssh_host: "{{ new_droplet.droplet.ip_address }}"
        ansible_ssh_private_key_file: "~/.ssh/id_rsa"
      when: new_droplet.droplet is defined

    - name: Flush old IPs from SSH known_hosts file.
      shell: 'ssh-keygen -f "$HOME/.ssh/known_hosts" -R {{ new_droplet.droplet.ip_address }}'
      when: new_droplet.changed

    - name: Add new IP to SSH known_hosts file.
      shell: 'ssh-keyscan -H -T 10 {{ new_droplet.droplet.ip_address }} >> "$HOME/.ssh/known_hosts"'
      when: new_droplet.changed

    - name: Assign domains to droplet
      digital_ocean_domain:
        state: present
        name: "{{ item }}"
        ip: "{{ new_droplet.droplet.ip_address }}"
        api_token: "{{ DO_API_TOKEN }}"
      when: new_droplet.droplet is defined
      with_items:
        - "{{ inventory_hostname }}"
        - "www.{{ inventory_hostname }}"

- name: Check for python2.7
  hosts: wp-blog
  gather_facts: False
  tasks:
    - name: install python 2.7
      raw: test -e /usr/bin/python || (sudo apt -y -qq update && sudo apt install -y -qq python-minimal libpython2.7-dev python-pip python-simplejson)
      changed_when: False

- name: Deploy MySQL servers and databases
  hosts: wp-blog
  become: yes
  pre_tasks:
  - name: Add MySQL repository key
    apt_key: url=http://repo.mysql.com/RPM-GPG-KEY-mysql state=present

  - name: Add MySQL Server repository
    apt_repository: repo='deb http://repo.mysql.com/apt/debian/ jessie mysql-5.6' state=present

- name: Deploy Letsencrypt
  hosts: wp-blog
  roles:
    - role: letsencrypt
      letsencrypt_webroot_path: /var/www/html
      letsencrypt_email: gregbiv@gmail.com
      letsencrypt_cert_domains:
       - www.kornienko.site
       - kornienko.site
      letsencrypt_renewal_command_args: '--renew-hook "systemctl restart nginx"'

- name: Configure WP application
  hosts: wp-blog
  become: True
  gather_facts: True
  roles:
    - { role: users,                                     tags: ["users"]                         }
    - { role: php-core,                                  tags: ["php", "php-core"]               }
    - { role: php-fpm,                                   tags: ["php", "php-fpm"]                }
    - { role: mysql,                                     tags: ["mysql", "database"]             }
    - { role: deployment,                                tags: ["deployment"]                    }
    - { role: nginx,                                     tags: ["nginx", "deployment"]           }
    - { role: logrotate,                                 tags: ["logrotate", "logging"]          }
    - { role: redis,                                     tags: ["redis"]                         }
